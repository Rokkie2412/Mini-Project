// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Pomodoro Screen Snapshot testing for pomodor screen Render correctly for pomodoro screen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#222831",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#EEEEEE",
          "fontSize": 30,
          "fontWeight": "bold",
          "margin": 20,
          "position": "absolute",
          "textAlign": "center",
        }
      }
    >
      Pomodoro Timer
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="Help"
  >
    <MockedIonicons
      name="help-circle-outline"
      style={
        Object {
          "alignSelf": "flex-end",
          "color": "#00ADB5",
          "fontSize": 33,
          "fontWeight": "bold",
          "marginVertical": 15,
          "padding": 10,
          "textAlign": "center",
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#00ADB5",
          "borderRadius": 30,
          "marginHorizontal": 15,
          "maxHeight": 600.3000000000001,
          "maxWidth": 712.5,
          "paddingVertical": 40,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#393E46",
            "fontSize": 30,
            "fontWeight": "bold",
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        Timer Stop
      </Text>
      <Text
        style={
          Object {
            "borderRadius": 30,
            "color": "#EEEEEE",
            "fontSize": 59,
            "fontWeight": "bold",
            "marginHorizontal": "5%",
            "paddingVertical": 60,
            "textAlign": "center",
          }
        }
      >
        NaN
         :
         
        NaN
         :
         
        NaN
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="play"
      >
        <MockedIonicons
          name="play"
          style={
            Object {
              "backgroundColor": "#393E46",
              "borderRadius": 50,
              "color": "#fff",
              "fontSize": 35,
              "margin": 10,
              "marginTop": 15,
              "padding": 24,
            }
          }
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="stop"
      >
        <MockedIonicons
          name="stop"
          style={
            Object {
              "backgroundColor": "#393E46",
              "borderRadius": 50,
              "color": "#fff",
              "fontSize": 35,
              "margin": 10,
              "marginTop": 15,
              "padding": 24,
            }
          }
        />
      </View>
    </View>
    <View>
      <Text
        style={
          Object {
            "color": "#EEEEEE",
            "fontSize": 18,
            "fontWeight": "bold",
            "marginTop": 15,
            "textAlign": "center",
          }
        }
      >
        Work cycle has been done :
         
        <Text
          style={
            Object {
              "color": "#00ADB5",
            }
          }
        >
          0
        </Text>
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="setting"
    >
      <Text
        style={
          Object {
            "backgroundColor": "#393E46",
            "borderRadius": 50,
            "color": "#EEEEEE",
            "fontSize": 20,
            "fontWeight": "bold",
            "marginBottom": 10,
            "padding": 15,
          }
        }
      >
        Settings 
        <MockedIonicons
          name="settings"
          size={18}
        />
      </Text>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    transparent={true}
    visible={true}
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#393E46",
          "borderRadius": 30,
          "flex": 1,
          "height": 933.8,
          "margin": "auto",
          "marginHorizontal": "5%",
          "marginVertical": "27%",
          "width": 675,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#EEEEEE",
              "fontSize": 22,
              "fontWeight": "bold",
              "margin": 10,
            }
          }
        >
          Settings
        </Text>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#222831",
            "borderRadius": 20,
            "marginHorizontal": 20,
            "marginVertical": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#EEEEEE",
              "fontSize": 16,
              "fontWeight": "bold",
              "marginTop": 7,
              "textAlign": "center",
            }
          }
        >
          Set Work Timer
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="sethour"
            value=""
          />
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setminute"
            value=""
          />
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setsecond"
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#222831",
            "borderRadius": 20,
            "marginHorizontal": 20,
            "marginVertical": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#EEEEEE",
              "fontSize": 16,
              "fontWeight": "bold",
              "marginTop": 7,
              "textAlign": "center",
            }
          }
        >
          Set Short Break Timer
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setshortminute"
            value=""
          />
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setshortsecond"
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#222831",
            "borderRadius": 20,
            "marginHorizontal": 20,
            "marginVertical": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#EEEEEE",
              "fontSize": 16,
              "fontWeight": "bold",
              "marginTop": 7,
              "textAlign": "center",
            }
          }
        >
          Set Long Break Timer
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setlongminute"
            value=""
          />
          <TextInput
            keyboardType="number-pad"
            onChangeText={[Function]}
            placeholder="00"
            placeholderTextColor="#EEEEEE"
            style={
              Object {
                "borderBottomColor": "#eeeeee",
                "borderBottomWidth": 2,
                "color": "#EEEEEE",
                "fontSize": 18,
                "margin": 10,
                "marginHorizontal": 8,
                "padding": 10,
                "textAlign": "center",
              }
            }
            testID="setlongsecond"
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="CloseSetting"
        >
          <Text
            style={
              Object {
                "backgroundColor": "#00ADB5",
                "borderRadius": 50,
                "color": "#EEEEEE",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginTop": 30,
                "padding": 15,
              }
            }
          >
            Cancel
          </Text>
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="SaveSetting"
        >
          <Text
            style={
              Object {
                "backgroundColor": "#00ADB5",
                "borderRadius": 50,
                "color": "#EEEEEE",
                "fontSize": 20,
                "fontWeight": "bold",
                "marginTop": 30,
                "padding": 15,
              }
            }
          >
            Save
          </Text>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    transparent={true}
    visible={true}
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "#393E46",
          "borderRadius": 30,
          "flex": 1,
          "height": "75%",
          "margin": "auto",
          "marginHorizontal": "5%",
          "marginVertical": "25%",
          "position": "absolute",
          "width": "90%",
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-end",
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="setupVisibleModal"
        >
          <MockedIonicons
            name="close"
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 30,
                "margin": 10,
              }
            }
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "color": "#EEEE",
            "fontSize": 30,
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        How to use
      </Text>
      <View
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#222831",
            "borderRadius": 25,
            "height": "71%",
            "margin": 12,
            "paddingHorizontal": 20,
            "width": "92%",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 17,
                "paddingLeft": 6,
                "paddingVertical": 17,
              }
            }
          >
            1.
          </Text>
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 16,
                "paddingHorizontal": 12,
                "paddingVertical": 17,
              }
            }
          >
            For better convenience, please lock the app on background
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 17,
                "paddingLeft": 6,
                "paddingVertical": 17,
              }
            }
          >
            2.
          </Text>
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 16,
                "paddingHorizontal": 12,
                "paddingVertical": 17,
              }
            }
          >
            Before use Doro Timer, you can set your timer that set for you in setting button
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 17,
                "paddingLeft": 6,
                "paddingVertical": 17,
              }
            }
          >
            3.
          </Text>
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 16,
                "paddingHorizontal": 12,
                "paddingVertical": 17,
              }
            }
          >
            To start timer, press play button, and to pause press pause button. Button will change every you press the button
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 17,
                "paddingLeft": 6,
                "paddingVertical": 17,
              }
            }
          >
            4.
          </Text>
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 16,
                "paddingHorizontal": 12,
                "paddingVertical": 17,
              }
            }
          >
            To stop timer, press stop button, timer will get reset to first condition
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 17,
                "paddingLeft": 6,
                "paddingVertical": 17,
              }
            }
          >
            5.
          </Text>
          <Text
            style={
              Object {
                "color": "#EEEE",
                "fontSize": 16,
                "paddingHorizontal": 12,
                "paddingVertical": 17,
              }
            }
          >
            When timer on you can't open setting, you must stop your timer first
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
        testID="VisibleModal"
      >
        <Text
          style={
            Object {
              "backgroundColor": "#00ADB5",
              "borderRadius": 50,
              "color": "#EEEE",
              "fontSize": 22,
              "fontWeight": "bold",
              "padding": 10,
            }
          }
        >
          Close
        </Text>
      </View>
    </View>
  </Modal>
</View>
`;
